/*
 * Copyright Â© 2020-2021 by Academia Sinica
 *
 * This file is part of SKISSM.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SKISSM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with SKISSM.  If not, see <http://www.gnu.org/licenses/>.
 */
syntax = "proto3";

package skissm;

option java_package = "org.e2eelab.proto.skissm";
option java_outer_classname = "ProtoMsgProto";
option objc_class_prefix = "Objc";
option swift_prefix="Swift";

import "skissm/AcceptMsg.proto";
import "skissm/AddGroupMemberDeviceMsg.proto";
import "skissm/AddGroupMembersMsg.proto";
import "skissm/AddUserDeviceMsg.proto";
import "skissm/AcquireSyncMsg.proto";
import "skissm/ClientHeartbeatMsg.proto";
import "skissm/CreateGroupMsg.proto";
import "skissm/E2eeAddress.proto";
import "skissm/E2eeMsg.proto";
import "skissm/FriendManagerMsg.proto";
import "skissm/GroupManagerMsg.proto";
import "skissm/InviteMsg.proto";
import "skissm/LeaveGroupMsg.proto";
import "skissm/ProtoMsgTag.proto";
import "skissm/RemoveGroupMembersMsg.proto";
import "skissm/RemoveUserDeviceMsg.proto";
import "skissm/UpdateUserMsg.proto";
import "skissm/SupplyOpksMsg.proto";
import "skissm/ServerHeartbeatMsg.proto";
import "skissm/ServerSignedSignature.proto";
import "skissm/SystemManagerMsg.proto";

message ProtoMsg {
    ProtoMsgTag tag = 1;                // The tag for helping server consume this msg.
    E2eeAddress from = 2;               // The sender's address.
    E2eeAddress to = 3;                 // The receiver's address.
    oneof payload {
        AcquireSyncMsg acquire_sync_msg = 11;               // The acquire sync msg.

        SupplyOpksMsg supply_opks_msg = 21;                 // The supply one-time pre-key msg.
        InviteMsg invite_msg = 22;                          // The invite msg.
        AcceptMsg accept_msg = 23;                          // The accept msg.
        AddUserDeviceMsg add_user_device_msg = 24;          // The add user device msg.
        RemoveUserDeviceMsg remove_user_device_msg = 25;    // The remove user device msg.

        CreateGroupMsg create_group_msg = 41;                       // The create group msg..
        AddGroupMembersMsg add_group_members_msg = 42;              // The add group members msg.
        RemoveGroupMembersMsg remove_group_members_msg = 43;        // The remove group members msg.
        AddGroupMemberDeviceMsg add_group_member_device_msg = 44;   // The add group member device msg.
        LeaveGroupMsg leave_group_msg = 45;                         // The leave group msg.

        E2eeMsg e2ee_msg = 51;                                      // The end to end encryption msg.

        UpdateUserMsg update_user_msg = 61;                         // The update user msg.

        FriendManagerMsg friend_manager_msg = 91;                   // The friend manager msg.
        GroupManagerMsg group_manager_msg = 92;                     // The group manager msg.
        SystemManagerMsg system_manager_msg = 93;                   // The system manager msg.

        ClientHeartbeatMsg client_heartbeat_msg = 101;              // The client heart beat msg.
        ServerHeartbeatMsg server_heartbeat_msg = 102;              // The server heart beat msg.
    };

    ServerSignedSignature signature = 1001;     // The signature of tag||from||to||payload signed by the server's key
}
