/*
 * Copyright Â© 2020-2021 by Academia Sinica
 *
 * This file is part of SKISSM.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SKISSM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with SKISSM.  If not, see <http://www.gnu.org/licenses/>.
 */
syntax = "proto3";

package skissm;

option java_package = "org.e2eelab.proto.skissm";
option java_outer_classname = "SessionProto";
option objc_class_prefix = "Objc";
option swift_prefix="Swift";

import "skissm/E2eeAddress.proto";
import "skissm/Ratchet.proto";

message Session {
    string version = 1;                     // The version
    string e2ee_pack_id = 2;                // The e2ee pack ID
    string session_id = 3;                  // The session ID
    E2eeAddress session_owner = 4;          // The session owner's address
    E2eeAddress from = 5;                   // The sender's address
    E2eeAddress to = 6;                     // The receiver's address
    Ratchet ratchet = 7;                    // The ratchet proto
    bytes alice_identity_key = 8;           // The sender's identity key
    bytes alice_ephemeral_key = 9;
    bytes bob_signed_pre_key = 10;          // The receiver's signed pre-key
    uint32 bob_signed_pre_key_id = 11;      // The receiver's signed pre-key ID
    bytes bob_one_time_pre_key = 12;        // The receiver's one-time pre-key
    uint32 bob_one_time_pre_key_id = 13;    // The receiver's one-time pre-key ID
    bytes associated_data = 14;             // The associated data

    bool f2f = 15;                          // The session is face-to-face or not
    bool responded = 16;                    // The receiver has responded or not
    int64 t_invite = 17;
    repeated bytes pre_shared_keys = 18;
}
